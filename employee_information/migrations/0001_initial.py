# Generated by Django 4.1.7 on 2023-09-15 10:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(default='Admin', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('status', models.IntegerField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee_personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_ID', models.CharField(max_length=5)),
                ('emp_name', models.TextField()),
                ('email', models.CharField(max_length=200)),
                ('phone', models.BigIntegerField(max_length=10)),
                ('emergency_phone', models.BigIntegerField()),
                ('address', models.TextField()),
                ('blood_grp', models.TextField()),
                ('pancard', models.CharField(max_length=10)),
                ('adharcard', models.CharField(max_length=12)),
                ('joining_date', models.DateField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.department')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_name', models.CharField(max_length=50)),
                ('total_allocation', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('status', models.IntegerField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Login_Hours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_time', models.DateTimeField(null=True)),
                ('login_dtime', models.DateTimeField(null=True)),
                ('logout_dtime', models.DateTimeField(null=True)),
                ('break_start_dtime', models.DateTimeField(null=True)),
                ('break_end_dtime', models.DateTimeField(null=True)),
                ('total_session_dtime', models.DateTimeField(null=True)),
                ('active_dtime', models.DateTimeField(null=True)),
                ('locked_dtime', models.DateTimeField(null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.employee_personal')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.FloatField()),
                ('half_day', models.BooleanField(default=False)),
                ('reason', models.TextField()),
                ('leave_approver', models.CharField(max_length=30, null=True)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('Letter_head', models.CharField(max_length=40, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.employee_personal')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_leaves', models.IntegerField(default=0)),
                ('pending_leaves', models.IntegerField()),
                ('available_leaves', models.IntegerField(default=0)),
                ('casual_leave', models.IntegerField(null=True)),
                ('privilege_leave', models.IntegerField(default=20, null=True)),
                ('sick_leave', models.IntegerField(default=10, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.employee_personal')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.leavetype')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.TextField()),
                ('designation', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_months', models.TextField(null=True)),
                ('leave_reason', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=100)),
                ('firstname', models.TextField()),
                ('middlename', models.TextField(blank=True, null=True)),
                ('lastname', models.TextField()),
                ('gender', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('contact', models.TextField()),
                ('address', models.TextField()),
                ('email', models.TextField()),
                ('date_hired', models.DateField()),
                ('salary', models.FloatField(default=0)),
                ('status', models.IntegerField()),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.department')),
                ('position_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.position')),
            ],
        ),
        migrations.AddField(
            model_name='employee_personal',
            name='designation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_information.position'),
        ),
        migrations.AddField(
            model_name='employee_personal',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Employee_Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenth_stream', models.TextField(default='None')),
                ('tenth_university', models.TextField(default='None')),
                ('tenth_year', models.TextField(default='None')),
                ('tenth_percent', models.TextField(default='None')),
                ('tenth_pdf', models.FileField(default='None', upload_to='attachments/')),
                ('twelfth_stream', models.TextField(null=True)),
                ('twelfth_university', models.TextField(null=True)),
                ('twelfth_year', models.TextField(null=True)),
                ('twelfth_percent', models.TextField(null=True)),
                ('twelfth_pdf', models.FileField(null=True, upload_to='attachments/')),
                ('degree_stream', models.TextField(null=True)),
                ('degree_university', models.TextField(null=True)),
                ('degree_year', models.TextField(null=True)),
                ('degree_percent', models.TextField(null=True)),
                ('degree_pdf', models.FileField(null=True, upload_to='attachments/')),
                ('master_degree_stream', models.TextField(null=True)),
                ('master_degree_university', models.TextField(null=True)),
                ('master_degree_year', models.TextField(null=True)),
                ('master_degree_percent', models.TextField(null=True)),
                ('master_degree_pdf', models.FileField(null=True, upload_to='attachments/')),
                ('diploma_stream', models.TextField(null=True)),
                ('diploma_university', models.TextField(null=True)),
                ('diploma_year', models.TextField(null=True)),
                ('diploma_percent', models.TextField(null=True)),
                ('diploma_pdf', models.FileField(null=True, upload_to='attachments/')),
                ('other_stream', models.TextField(null=True)),
                ('other_university', models.TextField(null=True)),
                ('other_year', models.TextField(null=True)),
                ('other_percent', models.TextField(null=True)),
                ('other_pdf', models.FileField(null=True, upload_to='attachments/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
